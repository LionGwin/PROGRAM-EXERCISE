import torch
#规则一：如果两个张量的维度数不相同，则较小的张量将在其左侧填充1，直到两个张量的维度数相同。例如，一个形状为[a]的张量和一个形状为[b, c]的张量进行广播时，前者会被视为形状为[1, a]的张量。
#规则二：在每个维度上，两个张量的尺寸必须相同，或者其中一个尺寸必须是1。如果尺寸为1，则扩展该维度以匹配另一个张量的尺寸。例如，形状为[a, 1]的张量和形状为[a, b]的张量可以广播，因为第二个维度在第一个张量中是1。
#规则三：在输出张量中，每个维度的大小都是输入张量在该维度上的最大尺寸。
# 示例2: 形状不同的张量，但可以进行广播  
x = torch.tensor([[1], [2], [3]])  # 形状是 [3, 1]  
y = torch.tensor([4, 5, 6])       # 形状是 [3]  
z = x + y  # 结果是 [[5], [7], [9]]，因为y的维度在左侧被填充为1 
print(z)